// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                  String                @id @default(uuid()) @db.Uuid
  first_name          String                @db.VarChar(255)
  last_name           String?               @db.VarChar(255)
  email               String                @unique @db.VarChar(255)
  password            String                @db.Text
  institute_id        String?               @db.VarChar(255)
  access_token        String?               @db.Text
  is_plaid_connect    Boolean               @default(false) @db.Boolean
  deletedAt           DateTime?             @db.Timestamp()
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  otp                 String?               @db.VarChar(10)
  otp_expire_at       DateTime?             @db.Date
  chats               chats[]
  pinned_chats        pin_chats[]
  transaction_history transaction_history[]
}

model chats {
  id        String          @id @default(uuid()) @db.Uuid
  user_id   String          @db.Uuid
  deletedAt DateTime?       @db.Timestamp()
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  user      users           @relation(fields: [user_id], references: [id])
  messages  chat_messages[]
  pin_chats pin_chats[]
}

model chat_messages {
  id        String    @id @default(uuid()) @db.Uuid
  chat_id   String    @db.Uuid
  sender_id String?   @db.VarChar(255)
  message   String    @db.Text
  deletedAt DateTime? @db.Timestamp()
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chats     chats?    @relation(fields: [chat_id], references: [id])
}

model pin_chats {
  id        String    @id @default(uuid()) @db.Uuid
  chat_id   String    @db.Uuid
  user_id   String    @db.Uuid
  deletedAt DateTime? @db.Timestamp()
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chats     chats?    @relation(fields: [chat_id], references: [id])
  user      users     @relation(fields: [user_id], references: [id])
}

model transaction_history {
  id           String   @id @default(uuid()) @db.Uuid
  added        Json     @default("[]")
  removed      Json     @default("[]")
  metadata     Json     @default("{}")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         users    @relation(fields: [user_id], references: [id])
  user_id      String   @db.Uuid
}
